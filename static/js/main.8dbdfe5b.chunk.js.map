{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","msid","sid","mid","hid","fms","mseconds","document","querySelector","textContent","Number","fs","seconds","fm","minutes","style","display","fh","hours","className","onClick","start","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yMAoGeA,MAjGf,WACE,IAAIC,EAAKC,EAAIC,EAAIC,EAqBXC,EAAM,WACV,IAAIC,EAAWC,SAASC,cAAc,aACV,OAAzBF,EAASG,YACRH,EAASG,YAAc,IAGvBH,EAASG,YAAcC,OAAOJ,EAASG,aAAe,GAGtDE,EAAK,WACT,IAAIC,EAAUL,SAASC,cAAc,YACV,OAAxBI,EAAQH,YACPG,EAAQH,YAAc,IAGtBG,EAAQH,YAAcC,OAAOE,EAAQH,aAAe,GAIpDI,EAAK,WACT,IAAIC,EAAUP,SAASC,cAAc,YACrCD,SAASC,cAAc,SAASO,MAAMC,QAAU,OACrB,KAAxBF,EAAQL,YACPK,EAAQL,YAAc,IACM,KAAxBK,EAAQL,YACZK,EAAQL,YAAc,IAGtBK,EAAQL,YAAcC,OAAOI,EAAQL,aAAe,GAGpDQ,EAAK,WACT,IAAIC,EAAQX,SAASC,cAAc,UACnCD,SAASC,cAAc,QAAQO,MAAMC,QAAU,OACtB,KAAtBE,EAAMT,YACLS,EAAMT,YAAc,IAEpBS,EAAMT,YAAcC,OAAOQ,EAAMT,aAAe,GAiBtD,OACE,sBAAKU,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,YADnB,IACoC,qBAAKA,UAAU,SAAf,kBAEpC,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cADnB,IACsC,qBAAKA,UAAU,SAAf,kBAEtC,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,eADJ,IACuC,qBAAKA,UAAU,OAAf,kBAEvC,qBAAKA,UAAU,aAAf,kBAEJ,sBAAKA,UAAU,UAAf,UACI,wBAAQA,UAAU,QAAQC,QAxFrB,WACb,IAAIC,EAAQd,SAASC,cAAc,UACV,UAAtBa,EAAMZ,aACLY,EAAMZ,YAAc,OAEpBR,EAAOqB,YAAYjB,EAAI,GACvBH,EAAMoB,YAAYX,EAAG,KACrBR,EAAMmB,YAAYT,EAAG,KACrBT,EAAMkB,YAAYL,EAAG,QAGrBI,EAAMZ,YAAc,QACpBc,cAActB,GACdsB,cAAcrB,GACdqB,cAAcpB,GACdoB,cAAcnB,KAyEV,mBACA,wBAAQe,UAAU,QAAQC,QA/BrB,WACbG,cAActB,GACdsB,cAAcrB,GACdqB,cAAcpB,GACdoB,cAAcnB,GACdG,SAASC,cAAc,aAAaC,YAAc,EAClDF,SAASC,cAAc,YAAYC,YAAc,EACjDF,SAASC,cAAc,YAAYC,YAAc,GACjDF,SAASC,cAAc,UAAUC,YAAc,GAE/CF,SAASC,cAAc,UAAUC,YAAc,QAC/CF,SAASC,cAAc,SAASO,MAAMC,QAAU,OAChDT,SAASC,cAAc,QAAQO,MAAMC,QAAU,QAmBvC,0BCnFGQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,K","file":"static/js/main.8dbdfe5b.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\n\nfunction App() {\n  var msid,sid,mid,hid;\n\n  const fstart = () =>{\n    let start = document.querySelector('.start');\n    if(start.textContent === 'START'){\n        start.textContent = 'STOP';\n    \n        msid = setInterval(fms,1);\n        sid = setInterval(fs,1000);\n        mid = setInterval(fm,60000);\n        hid = setInterval(fh,3600000);\n    }\n    else{\n        start.textContent = 'START';\n        clearInterval(msid);\n        clearInterval(sid);\n        clearInterval(mid);\n        clearInterval(hid);\n    }\n  }\n  \n  const fms = () => {\n    let mseconds = document.querySelector('.mseconds');\n    if(mseconds.textContent === '99'){\n        mseconds.textContent = '0';\n    }\n    else\n        mseconds.textContent = Number(mseconds.textContent) + 1 ;\n  }\n  \n  const fs = () => {\n    let seconds = document.querySelector('.seconds');\n    if(seconds.textContent === '59'){\n        seconds.textContent = '0';\n    }\n    else{\n        seconds.textContent = Number(seconds.textContent) + 1;\n    }\n  }\n  \n  const fm = () => {\n    let minutes = document.querySelector('.minutes');\n    document.querySelector('.mins').style.display = 'flex';\n    if(minutes.textContent === \"\")\n        minutes.textContent = '1';\n    else if(minutes.textContent === 59){\n        minutes.textContent = '0';\n    }\n    else\n        minutes.textContent = Number(minutes.textContent) + 1;\n  }\n\n  const fh = () => {\n    let hours = document.querySelector('.hours');\n    document.querySelector('.hrs').style.display = 'flex';\n    if(hours.textContent === \"\")\n        hours.textContent = '1';\n    else\n        hours.textContent = Number(hours.textContent) + 1;\n  }\n  const freset = () => {\n    clearInterval(msid);\n    clearInterval(sid);\n    clearInterval(mid);\n    clearInterval(hid);\n    document.querySelector('.mseconds').textContent = 0;\n    document.querySelector('.seconds').textContent = 0;\n    document.querySelector('.minutes').textContent = \"\";\n    document.querySelector('.hours').textContent = \"\";\n  \n    document.querySelector('.start').textContent = 'START';\n    document.querySelector('.mins').style.display = 'none';\n    document.querySelector('.hrs').style.display = 'none';\n  }\n\n  return (\n    <div className=\"container\">\n        <div className=\"time\">\n            <div className=\"digit hrs\">\n                <div className=\"hours t\"></div> <div className=\"unit h\">h</div>\n            </div>\n            <div className=\"digit mins\">\n                <div className=\"minutes t\"></div> <div className=\"unit m\">m</div>\n            </div>\n            <div className=\"digit sds\">\n                <div className=\"seconds t\">0</div> <div className=\"unit\">s</div>\n            </div>\n            <div className=\"mseconds t\">0</div>\n        </div>\n        <div className=\"buttons\">\n            <button className=\"start\" onClick = {fstart}>START</button>\n            <button className=\"reset\" onClick = {freset}>RESET</button>\n        </div>\n    </div>\n  );\n} \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}